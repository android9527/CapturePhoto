package com.client.capturephoto;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.CheckBox;
import android.widget.TextView;

public class MyAdapter extends BaseAdapter {
	// 填充数据的list
	private List<Map<String, Object>> list;
	// 用来控制CheckBox的选中状况
	private static HashMap<Integer, Boolean> isSelected;
	// 上下文
	private Context context;
	// 用来导入布局
	private LayoutInflater inflater = null;

	// 构造器
	public MyAdapter(List<Map<String, Object>> list, Context context) {
		this.context = context;
		this.list = list;
		inflater = LayoutInflater.from(context);
		isSelected = new HashMap<Integer, Boolean>();
		// 初始化数据
		initDate();
	}

	// 初始化isSelected的数据
	private void initDate() {
		for (int i = 0; i < list.size(); i++) {
			getIsSelected().put(i, false);
		}
	}

	@Override
	public int getCount() {
		return list.size();
	}

	@Override
	public Object getItem(int position) {
		return list.get(position);
	}

	@Override
	public long getItemId(int position) {
		return position;
	}

	@Override
	public View getView(final int position, View convertView, ViewGroup parent) {
		ViewHolder holder = null;
		if (convertView == null) {
			// 获得ViewHolder对象
			holder = new ViewHolder();
			// 导入布局并赋值给convertview
			convertView = inflater.inflate(R.layout.list_item, null);
			holder.number = (TextView) convertView
					.findViewById(R.id.text_number);
			holder.name = (TextView) convertView.findViewById(R.id.text_name);
			holder.check = (CheckBox) convertView
					.findViewById(R.id.check_delete);
			// 为view设置标签
			convertView.setTag(holder);
		} else {
			// 取出holder
			holder = (ViewHolder) convertView.getTag();
		}

		// 设置list中TextView的显示
		holder.number.setText(list.get(position).get("number").toString());
		holder.name.setText(list.get(position).get("name").toString());
		// 根据isSelected来设置checkbox的选中状况
		holder.check.setChecked(isSelected.get(position));

		holder.check.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				if (isSelected.get(position)) {
					isSelected.put(position, false);
				} else {
					isSelected.put(position, true);
				}
//				notifyDataSetChanged();
			}
		});

		return convertView;
	}

	public static HashMap<Integer, Boolean> getIsSelected() {
		return isSelected;
	}

	public static void setIsSelected(HashMap<Integer, Boolean> isSelected) {
		MyAdapter.isSelected = isSelected;
	}
	
	public void setSelected(int position) {
		if (getSelected(position)) {
			isSelected.put(position, false);
		} else {
			isSelected.put(position, true);
		}
		notifyDataSetChanged();
	}
	
	public boolean getSelected(int position) {
		return isSelected.get(position);
	}

	private class ViewHolder {
		TextView number, name;
		CheckBox check;
	}

}